name: Continuous Integration

on:
  push:
    branches:
      - main
      - wip
  pull_request:

jobs:
  ci:
    name: "Test-build avr-device with all targets and runtime enabled"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Rust Dependencies
      - name: Install Stable Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Install Nightly Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2025-03-03
          components: rustfmt,rust-src

      # Actual test run
      - name: Test-compile the crate
        run: cargo check --target avr-none --all-features -Zbuild-std=core
        env:
          RUSTFLAGS: "-C target-cpu=atmega328p"

      # Package artifacts
      - name: Generate a cargo package for the macros
        run: cd macros/; cargo package --target avr-none --no-verify --allow-dirty
        env:
          RUSTFLAGS: "-C target-cpu=atmega328p"
      - name: Generate a cargo package for avr-device
        run: cargo package --target avr-none --no-verify --allow-dirty
        env:
          RUSTFLAGS: "-C target-cpu=atmega328p"

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: avr-device
          path: |
            target/avr-none/debug/build/avr-device-*/out/svd/
            target/package/avr-device-*.crate
            macros/target/package/avr-device-macros-*.crate

  ci-example:
    name: "Test-build ATmega328P example"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2025-03-03
          rustflags: ""
          components: rust-src,rustfmt
      - name: Install AVR gcc, binutils, and libc
        run: sudo apt-get install -y avr-libc binutils-avr gcc-avr
      - name: Build ATmega328P example
        run: cd examples/atmega328p && cargo build
      - name: Check ATmega328P formatting
        run: cd examples/atmega328p && cargo fmt --check
